
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v69=v2(v0(v30,16));if v19 then local v76=v5(v69,v19);v19=nil;return v76;else return v69;end end end);local function v20(v31,v32,v33)if v33 then local v70=0 -0 ;local v71;while true do if (((0 -0) -0)==v70) then v71=(v31/((780 -(435 + 343))^(v32-1)))%((1087 -(485 + 600))^(((v33-((896 -(36 + 859)) + 0)) -(v32-1)) + ((1685 -(384 + 1299)) -1))) ;return v71-(v71%(980 -(83 + 504 + 128 + 264))) ;end end else local v72=(1 + 1)^(v32-(1815 -(453 + 1361))) ;return (((v31%(v72 + v72))>=v72) and (2 -1)) or (0 + 0) ;end end local function v21()local v34=0 + 0 ;local v35;while true do if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + ((651 -(22 + 501)) -(85 + 42)) ;v34=3 -2 ;end if (v34==(2 -1)) then return v35;end end end local function v22()local v36=1061 -(593 + 468) ;local v37;local v38;while true do if (v36==(136 -(30 + 105))) then return (v38 * (114 + 142)) + v37 ;end if (v36==(0 -0)) then v37,v38=v1(v16,v18,v18 + 2 );v18=v18 + ((1 + 1) -0) ;v36=645 -(516 + 128) ;end end end local function v23()local v39=0 -0 ;local v40;local v41;local v42;local v43;while true do if (v39==0) then v40,v41,v42,v43=v1(v16,v18,v18 + (1058 -((2017 -(1048 + 167)) + 253)) );v18=v18 + (198 -(42 + 152)) ;v39=1293 -(1196 + 96) ;end if (v39==(1 + 0 + 0)) then return (v43 * (77697168 -60919952)) + (v42 * ((41541 -32035) + 56030)) + (v41 * (151 + 105)) + v40 ;end end end local function v24()local v44=v23();local v45=v23();local v46=1;local v47=(v20(v45,1,43 -23 ) * ((1 + (1849 -(988 + 860)))^(1627 -((2419 -(584 + 1129)) + 889)))) + v44 ;local v48=v20(v45,21,(97 -39) -27 );local v49=((v20(v45,31 + (1 -0) )==(1 + 0)) and  -1) or (1 + 0) ;if (v48==(0 -0)) then if (v47==(714 -(266 + 448))) then return v49 * (988 -(695 + 293)) ;else v48=3 -2 ;v46=0 -0 ;end elseif (v48==(6085 -4038)) then return ((v47==(0 + 0)) and (v49 * (((3 -0) -2)/(0 -0)))) or (v49 * NaN) ;end return v8(v49,v48-(1471 -(46 + 402)) ) * (v46 + (v47/((634 -(12 + 495 + 125))^(17 + 35)))) ;end local function v25(v50)local v51=1594 -(1075 + 519) ;local v52;local v53;while true do if (v51==3) then return v6(v53);end if ((3 -1)==v51) then v53={};for v77=57 -(43 + 13) , #v52 do v53[v77]=v2(v1(v3(v52,v77,v77)));end v51=2 + 1 ;end if (v51==(1 -0)) then v52=v3(v16,v18,(v18 + v50) -((626 -(624 + 1)) + 0) );v18=v18 + v50 ;v51=2;end if (v51==(1721 -(1253 + 457 + 11))) then v52=nil;if  not v50 then v50=v23();if (v50==(0 + 0)) then return "";end end v51=382 -(264 + 117) ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do local v68=0;while true do if ((0 -0)~=v68) then else local v79=0 -0 ;while true do if (v79~=0) then else if (v54~=(1879 -(1033 + 845))) then else local v99=0 -0 ;while true do if (v99==(0 -0)) then v58={v55,v56,nil,v57};v59=v23();v99=1;end if (v99~=1) then else v60={};v54=2 -0 ;break;end end end if (v54==(1074 -(620 + 452))) then local v100=916 -(381 + 535) ;while true do if (v100==0) then for v116=1 + 0 ,v59 do local v117=0;local v118;local v119;local v120;while true do if (v117==(3 -2)) then v120=nil;while true do if (v118==(1 + 0)) then if (v119==(1 + 0)) then v120=v21()~=0 ;elseif (v119==2) then v120=v24();elseif (v119~=(2 + 1)) then else v120=v25();end v60[v116]=v120;break;end if (v118==0) then local v132=0;local v133;while true do if (v132~=0) then else v133=0 + 0 ;while true do if (v133~=1) then else v118=3 -2 ;break;end if (v133==(0 + 0)) then v119=v21();v120=nil;v133=1 + 0 ;end end break;end end end end break;end if (v117==(0 + 0)) then local v124=1680 -(1593 + 87) ;while true do if (v124~=1) then else v117=1 + 0 ;break;end if (v124==0) then v118=0;v119=nil;v124=1;end end end end end v58[3]=v21();v100=1 -0 ;end if (v100~=(16 -(13 + 2))) then else for v121=1,v23() do local v122=0;local v123;while true do if (v122==(0 -0)) then v123=v21();if (v20(v123,1,1)==(0 -0)) then local v125=0 -0 ;local v126;local v127;local v128;while true do if (v125~=1) then else local v134=0;while true do if (v134~=(0 + 0)) then else v128={v22(),v22(),nil,nil};if (v126==(0 + 0)) then local v144=0 + 0 ;local v145;while true do if ((231 -(19 + 212))==v144) then v145=856 -(797 + 59) ;while true do if (v145==0) then v128[2 + 1 ]=v22();v128[3 + 1 ]=v22();break;end end break;end end elseif (v126==(3 -2)) then v128[8 -5 ]=v23();elseif (v126==(608 -(460 + 146))) then v128[3]=v23() -((2 -0)^16) ;elseif (v126==3) then local v234=0 -0 ;local v235;while true do if (v234==0) then v235=0 -0 ;while true do if (v235==(0 + 0)) then v128[5 -2 ]=v23() -((6 -4)^16) ;v128[1679 -(702 + 973) ]=v22();break;end end break;end end end v134=1;end if (v134==(160 -(101 + 58))) then v125=2 + 0 ;break;end end end if (v125~=2) then else if (v20(v127,1,1504 -(680 + 823) )==1) then v128[1 + 1 ]=v60[v128[1604 -(628 + 974) ]];end if (v20(v127,2,9 -7 )~=(1 + 0)) then else v128[1246 -(367 + 876) ]=v60[v128[3]];end v125=3;end if (v125~=3) then else if (v20(v127,683 -(537 + 143) ,3)==1) then v128[4]=v60[v128[4]];end v55[v121]=v128;break;end if (v125~=0) then else v126=v20(v123,1213 -(240 + 971) ,626 -(191 + 432) );v127=v20(v123,4,6);v125=1 + 0 ;end end end break;end end end v54=1 + 2 ;break;end end end v79=1;end if (v79==1) then v68=1576 -(798 + 777) ;break;end end end if (v68==1) then if (v54~=(1406 -(334 + 1069))) then else local v86=1709 -(398 + 1311) ;while true do if (v86==0) then for v106=248 -(85 + 162) ,v23() do v56[v106-1 ]=v28();end for v108=993 -(121 + 871) ,v23() do v57[v108]=v23();end v86=898 -(781 + 116) ;end if (1==v86) then return v58;end end end if (v54~=(0 + 0)) then else local v87=0;local v88;while true do if (0==v87) then v88=0;while true do if (v88~=0) then else local v115=0 -0 ;while true do if (v115~=(0 -0)) then else v55={};v56={};v115=1;end if (v115~=(2 -1)) then else v88=1;break;end end end if (v88==1) then v57={};v54=1;break;end end break;end end end break;end end end end local function v29(v61,v62,v63)local v64=0;local v65;local v66;local v67;while true do if (v64==0) then v65=v61[1];v66=v61[2];v64=1;end if (v64==1) then v67=v61[3];return function(...)local v80=0;local v81;local v82;local v83;local v84;local v85;while true do if (0==v80) then v81=1;v82= -1;v80=1;end if (v80==2) then v85=nil;function v85()local v89=v65;local v90=v66;local v91=v67;local v92=v27;local v93={};local v94={};local v95={};for v101=0,v84 do if ((v101>=v91) or ((3228 -(428 + 1153))>=(157 + (4921 -2095)))) then v93[v101-v91 ]=v83[v101 + 1 + 0 ];else v95[v101]=v83[v101 + 1 + 0 ];end end local v96=(v84-v91) + 1 ;local v97;local v98;while true do local v102=0 -(464 -(203 + 261)) ;local v103;local v104;while true do if ((v102==(0 -(1338 -(193 + 1145)))) or (3826<=(3940 -1094))) then v103=1990 -(1662 + 328) ;v104=nil;v102=1609 -(548 + 1060) ;end if ((v102==(2 -(1 + 0))) or ((8479 -5300)>=(616 + 3473))) then while true do if (((3823 -(636 + 1085))==((3982 -(577 + 212)) -(610 + (741 -(43 + 217))))) and (v103==(34 -(26 + 8)))) then v104=0 -0 ;while true do if ((v104==(1 -0)) or ((874 + 856)==1948)) then if ((v98<=(6 + 10)) or (((1323 -800) + 1846)==(2494 + (2002 -(697 + 734))))) then if ((v98<=(2 + 5)) or (3525<(2238 -(222 + 677)))) then if ((v98<=((1 + 3) -1)) or ((7601 -4885)>(3736 -(76 + 440)))) then if ((v98<=(2 -1)) or ((10504 -7498)<2727)) then if (((6281 -4081)<(134 + 2751)) and (v98==(371 -(301 + 70)))) then v95[v97[8 -6 ]][v97[6 -3 ]]=v95[v97[4]];else v81=v97[794 -(9 + 782) ];end elseif ((((10077 -(923 + 730)) -6415)<=(9232 -5931)) and (v98>(1 + 1))) then v95[v97[1745 -(1062 + 681) ]]=v63[v97[3 + 0 ]];else v95[v97[(882 + 213) -(520 + 573) ]]=v29(v90[v97[5 -2 ]],nil,v63);end elseif ((1390<=((3874 + 4485) -6468)) and (v98<=(5 + 0))) then if ((v98>(1584 -((1306 -(163 + 182)) + 619))) or ((1303 + 88)<=631)) then local v153=(651 -(177 + 474)) + 0 ;local v154;local v155;local v156;while true do if (((13705 -10312)>=(1837 + 629)) and (((3332 -1587) -(1564 + 181))==v153)) then v154=(0 + 0) -0 ;v155=nil;v153=1;end if (((5 + 3 + 326)==334) and (v153==1)) then v156=nil;while true do if ((v154==(226 -((1990 -(1325 + 500)) + 61))) or ((3543 -(26 + 11 + 104))>=(3542 + 229))) then local v242=0;while true do if (((686 + 104)>=(542 -(258 + 190))) and (v242==(46 -(37 + 9)))) then v155=v97[2];v156={};v242=1;end if ((v242==1) or (((2084 -(58 + 1879)) + 1755)>(938 + 3142))) then v154=484 -(244 + 239) ;break;end end end if ((v154==(1767 -(1743 + 23))) or ((5554 -(162 + 1601))<(11160 -7968))) then for v256=840 -(522 + 317) , #v94 do local v257=0 -0 ;local v258;local v259;while true do if ((v257==(1 + 0)) or ((5712 -(274 + 1529))<=(4548 -(32 + 674)))) then while true do if (((19 + 2)<=(2850 -(1577 + 120 + 91))) and (v258==(0 + 0))) then v259=v94[v256];for v301=0 + 0 + 0 , #v259 do local v302=0;local v303;local v304;local v305;local v306;while true do if ((v302==(1 + 1)) or (1847>1881)) then while true do if ((v303==1) or ((354 + 3744)<=3096)) then v306=v304[332 -(92 + 238) ];if (((v305==v95) and (v306>=v155)) or ((704 + 4011)==((2928 -1438) + 2340))) then local v317=567 -(412 + 155) ;local v318;while true do if ((4886>(4941 -(342 + 742))) and (v317==0)) then v318=0 -0 ;while true do if (((0 -0)==v318) or ((8262 -4134)<=(3279 -(620 + 475)))) then v156[v306]=v305[v306];v304[1 -0 ]=v156;break;end end break;end end end break;end if ((v303==(0 + 0)) or (((1544 -789) + 1954)>=(3734 -(707 + (968 -(396 + 469)))))) then local v315=0 + 0 + 0 ;while true do if ((v315==(1392 -((1733 -(1560 + 123)) + 1342))) or ((1328 -(580 + (434 -(38 + 129))))>617)) then v304=v259[v301];v305=v304[779 -(552 + 226) ];v315=1 + 0 ;end if ((v315==(2 -(1 + 0))) or ((2725 -1628)==(3993 -(991 + 593)))) then v303=1;break;end end end end break;end if ((v302==(1 -0)) or ((6756 -4365)==(2355 -(90 + 616 + 67)))) then v305=nil;v306=nil;v302=471 -(437 + 32) ;end if ((v302==(563 -(329 + 234))) or (2909<=((641 -344) + 383))) then v303=294 -(180 + 114) ;v304=nil;v302=3 -(830 -(515 + 313)) ;end end end break;end end break;end if ((v257==(0 + (1806 -(62 + 1744)))) or ((231 + 668 + 1433)==(3376 -1621))) then v258=0 + 0 ;v259=nil;v257=529 -(42 + 486) ;end end end break;end end break;end end else do return v95[v97[1 + 1 ]];end end elseif (((3678 -(474 + 775))<=2495) and (v98==(11 -5))) then v95[v97[3 -1 ]]=v95[v97[964 -(788 + 173) ]];elseif ((v95[v97[2]]~=v95[v97[10 -6 ]]) or ((1621 + 340)>2830)) then v81=v81 + ((838 -559) -(107 + 171)) ;else v81=v97[971 -(924 + 44) ];end elseif ((v98<=(23 -12)) or ((3950 -1883)>=(5092 -(264 + 178)))) then if (((7998 -6377)==((5055 -3028) -(173 + 233))) and (v98<=9)) then if ((v98==(5 + 3)) or ((6741 -(1125 + 659))==(1490 + 1867))) then do return;end else local v159=0 + 0 ;local v160;local v161;while true do if ((v159==(1562 -((251 -(195 + 15)) + 1520))) or ((6485 -(474 + 1485))<=(466 + 419))) then while true do if ((((0 + 0) -0)==v160) or (840<=((1042 -332) -(239 + 382)))) then v161=v97[709 -(490 + 217) ];v95[v161]=v95[v161]();break;end end break;end if ((v159==(1361 -(543 + 818))) or ((2488 -(308 + 259))>=(1493 + 240 + 2657))) then v160=0 + 0 ;v161=nil;v159=2 -1 ;end end end elseif (((5457 -(1285 + 232))>(854 + 1528)) and (v98>(9 + 1))) then if ((2971>474) and (v95[v97[1 + 1 ]]==v97[(11 -8) + 1 ])) then v81=v81 + (1089 -(791 + 297)) ;else v81=v97[3];end elseif ((3774>=((1719 -(44 + 105)) + 181)) and (v97[3 -1 ]==v95[v97[1783 -(276 + 1238 + 196 + 69) ]])) then v81=v81 + ((1 + 0) -0) ;else v81=v97[1 + 2 ];end elseif ((v98<=13) or ((360 -147)>588)) then if (((3348 -(495 + 554))<=4594) and (v98>(661 -(26 + 623)))) then v95[v97[2]]();else v95[v97[1944 -(1425 + 517) ]]=v62[v97[3 + 0 ]];end elseif ((v98<=(46 -32)) or ((67 + 66)>(591 -304))) then local v164=(1686 -(1016 + 670)) -0 ;local v165;local v166;local v167;while true do if ((v164==(0 + 0)) or (4353<(340 -(52 + 148)))) then v165=0 -0 ;v166=nil;v164=38 -(10 + 27) ;end if ((v164==1) or (2325==175)) then v167=nil;while true do if ((v165==0) or ((5528 -(533 + 348))<=(846 -425))) then local v245=420 -(411 + 9) ;while true do if (((4383 -(525 + 1400))<=(8307 -5581)) and (((1 -0) -0)==v245)) then v165=1;break;end if ((v245==(0 -0)) or ((53 + 453)>=(2480 -(120 + 327)))) then v166=0 + 0 ;v167=nil;v245=1873 -(1297 + 575) ;end end end if (((4608 -3615)<(7454 -3834)) and (v165==(1545 -(598 + 946)))) then while true do if (((70 + 47)==117) and (v166==0)) then v167=v97[618 -(337 + 279) ];v95[v167](v95[v167 + 1 + 0 ]);break;end end break;end end break;end end elseif ((v98>(23 -8)) or ((3571 -(958 + 333))>3005)) then local v215=0 -0 ;local v216;local v217;while true do if (((4060 -((3348 -2313) + 29))>=(2342 -(757 + 243))) and (v215==((767 -(23 + 742)) -1))) then while true do if (((5666 -3579)<(10286 -7725)) and (v216==(0 + 0))) then v217=v97[5 -3 ];v95[v217]=v95[v217](v13(v95,v217 + 1 ,v97[2 + 1 ]));break;end end break;end if ((v215==(0 -0)) or ((207 + 493)>=(305 + (11551 -8376)))) then v216=(0 -0) -0 ;v217=nil;v215=1 + 0 ;end end else v95[v97[2]]={};end elseif ((v98<=(73 -49)) or ((4133 -((1755 -862) + 708 + 145))<=(3030 -(846 + 287)))) then if (((4030 -(1100 + 453))<((7676 + 450) -3963)) and (v98<=(924 -(863 + 41)))) then if (((483 -347)<=3230) and (v98<=(5 + 13))) then if ((v98>(13 + 4)) or ((878 + 182)>(5155 -3284))) then v95[v97[2 -0 ]][v97[3]]=v97[6 -2 ];else for v206=v97[2],v97[6 -3 ] do v95[v206]=nil;end end elseif (((769 + 768)<=(5748 -(1420 + 518))) and (v98==(61 -42))) then local v170=0 -0 ;local v171;local v172;while true do if (((2891 + 900)>(4957 -(780 + 889))) and (v170==(1 + 0))) then while true do if ((v171==(0 + 0)) or ((3001 -(238 + (1477 -(100 + 1322))))>=4903)) then v172=v97[8 -6 ];do return v13(v95,v172,v172 + v97[3] );end break;end end break;end if (((1032 -(304 + 284))<(14 + (2880 -(125 + 149)))) and (v170==0)) then v171=1350 -((1856 -(1067 + 91)) + 652) ;v172=nil;v170=1;end end else v95[v97[2]][v95[v97[11 -8 ]]]=v97[1250 -(51 + 1195) ];end elseif ((v98<=((128 -93) -13)) or ((347 + 461)>=(709 + 388))) then if ((v98>21) or ((1585 -699)==(3574 + 756))) then if ((v97[2 -0 ]<v95[v97[4]]) or ((19903 -15589)<=(3776 -((1960 -824) + 231)))) then v81=v81 + (276 -(224 + 51)) ;else v81=v97[3 + 0 ];end elseif ( not v95[v97[2]] or ((7291 -4823)==(2599 -(1172 + 451)))) then v81=v81 + (1617 -(155 + 1461)) ;else v81=v97[6 -3 ];end elseif (((4362 -(279 + 140))<(663 + 4182)) and (v98>(16 + 7))) then local v175=0;local v176;local v177;local v178;local v179;local v180;while true do if ((v175==2) or ((1449 -418)==(6206 -3500))) then v180=nil;while true do if ((1534>=((1961 -(152 + 1647)) + 172)) and (v176==1)) then local v247=(0 + 0) -0 ;local v248;while true do if ((v247==0) or ((1931 -(1240 + 297))>(2964 -(375 + 1006)))) then v248=0 -0 ;while true do if ((525<=2225) and (v248==((761 -(644 + 117)) + 0))) then local v283=0 -0 ;while true do if (((3 -2)==v283) or ((11076 -8087)>=(3971 -(260 + 7)))) then v248=1;break;end if ((v283==(0 + 0)) or ((5416 -(272 + 814 + 885))<=(988 + (1135 -(297 + 751))))) then v82=(v179 + v177) -(4 -3) ;v180=0 -0 ;v283=2 -1 ;end end end if ((v248==(1 -0)) or (856>(6959 -2601))) then v176=1 + 1 ;break;end end break;end end end if (((6479 -(151 + 1707))>=(2251 -(353 + 631))) and (v176==(2 -0))) then for v260=v177,v82 do local v261=0;local v262;while true do if (((852 + 1094)<=(11528 -7410)) and (v261==(0 + 0))) then v262=(520 -(479 + 41)) -0 ;while true do if (((1638 -(392 + 147))==(1660 -((986 -(656 + 83)) + 314))) and (v262==(0 + 0))) then v180=v180 + (1520 -((1118 -413) + 814)) ;v95[v260]=v178[v180];break;end end break;end end end break;end if ((v176==(1010 -(557 + (929 -476)))) or (((19233 -9785) -4590)==(4077 -1082))) then local v249=0 -0 ;while true do if ((v249==(2 -1)) or ((21 + 1356)>2162)) then v176=(1 -0) + 0 ;break;end if (((9102 -4906)>=(4641 -(265 + 1626))) and (v249==0)) then local v270=0 + 0 ;while true do if (((1189 -(1763 -1073))==(1677 -(676 + (2144 -(1517 + 125))))) and (v270==(585 -(74 + 510)))) then v249=1 + 0 ;break;end if ((353==(648 -(108 + 187))) and (v270==(0 -0))) then v177=v97[2 + 0 ];v178,v179=v92(v95[v177](v95[v177 + 1 ]));v270=1 -(1075 -(118 + 957)) ;end end end end end end break;end if (((602 + (1728 -968))==1362) and (v175==(778 -(235 + 542)))) then local v229=0 + 0 ;while true do if ((v229==1) or ((5338 -(270 + 113))<=((6153 -3178) -(98 + 273)))) then v175=2 -0 ;break;end if ((v229==(0 + 0 + 0)) or ((3448 -2196)>=(1976 + 1395))) then v178=nil;v179=nil;v229=1 + 0 ;end end end if ((v175==(1563 -(156 + 1407))) or (4269<=75)) then local v230=0 -0 ;while true do if ((3727<(3928 + 153)) and (v230==0)) then v176=0 -0 ;v177=nil;v230=1;end if ((((1 + 0) -0)==v230) or ((5798 -(823 + 576))<=(263 + 203 + 805))) then v175=1;break;end end end end else local v181=(0 -0) -0 ;local v182;local v183;local v184;while true do if (((3583 -1618)==((5664 -(586 + 791)) -(330 + 1992))) and (v181==(0 -0))) then v182=0 + 0 ;v183=nil;v181=2 -1 ;end if ((v181==(1460 -(827 + 632))) or (619>2973)) then v184=nil;while true do if ((v182==((3 -2) -0)) or ((6469 -(16121 -11585))>3042)) then while true do if (((7064 -(4928 -(639 + 265)))<=4382) and (v183==(0 -0))) then v184=v97[2];v95[v184](v13(v95,v184 + 1 + 0 ,v97[14 -11 ]));break;end end break;end if (((0 + 0)==v182) or ((1157 + 3366)<=2876)) then local v250=0 -0 ;while true do if (((4049 + 949)>(2762 + 2086)) and ((0 + 0)==v250)) then v183=0 -0 ;v184=nil;v250=2 -(1 + 0) ;end if ((v250==(3 -2)) or ((1794 -1096)>(73 + 1308))) then v182=3 -2 ;break;end end end end break;end end end elseif (((1955 + 2543)>(634 + 164)) and (v98<=(24 + 4))) then if (((9860 -7263)<4371) and (v98<=(26 + 0))) then if ((v98==(56 -31)) or ((10 + 78 + 190)>=(3311 -(241 + 635)))) then if (v95[v97[2]] or (848>(4166 -1806))) then v81=v81 + (222 -(117 + 104)) ;else v81=v97[(1562 -(414 + 79)) -(606 + 460) ];end else local v185=619 -(263 + 356) ;local v186;local v187;local v188;while true do if ((2392<=(234 + 4097)) and (v185==(0 + 0))) then v186=(1084 + 629) -(514 + 658 + 541) ;v187=nil;v185=2 -1 ;end if ((v185==(4 -3)) or ((3456 -(136 + 187))>=(4871 -(1319 + 21)))) then v188=nil;while true do if ((0==v186) or (4714==(2556 + 1600))) then local v251=0 + 0 ;while true do if ((v251==((1057 -(182 + 875)) -0)) or (3267==489)) then v187=705 -(495 + 210) ;v188=nil;v251=1;end if (((1752 -1008)<=(1014 + 263)) and (v251==(1 + 0 + 0))) then v186=969 -(110 + 858) ;break;end end end if ((v186==1) or ((1929 -(6 + 171))<(1805 -429))) then while true do if ((v187==0) or ((5219 -3533)>=4412)) then v188=v97[2 + 0 ];v95[v188]=v95[v188](v95[v188 + (2 -1) ]);break;end end break;end end break;end end end elseif ((v98==27) or ((1253 + 111)<(881 + 18))) then local v189=0 + 0 ;local v190;local v191;local v192;while true do if (((11585 -6677)==(6347 -(195 + 1244))) and (v189==1)) then v192=0;for v236=v190,v97[4] do local v237=367 -(260 + 107) ;local v238;local v239;while true do if ((v237==(0 + 0 + 0)) or ((4826 -(644 + 754))==1487)) then v238=0;v239=nil;v237=4 -(8 -5) ;end if ((v237==(946 -(733 + 212))) or ((5234 -(640 + 1302))<2272)) then while true do if (((0 + 0)==v238) or ((640 + 1662)>=(3800 + 676))) then v239=0 + 0 + 0 ;while true do if ((v239==(87 -(55 + 32))) or ((4676 -2065)<=(1817 -(117 + 120)))) then v192=v192 + 1 + 0 ;v95[v236]=v191[v192];break;end end break;end end break;end end end break;end if ((v189==(842 -(124 + 718))) or (1917<(3143 -(916 + 681)))) then v190=v97[627 -(480 + 145) ];v191={v95[v190](v13(v95,v190 + 1 + 0 ,v82))};v189=1;end end else local v193=v97[964 -(788 + 174) ];local v194=v97[4];local v195=v193 + (1871 -(1221 + 648)) ;local v196={v95[v193](v95[v193 + 1 + 0 ],v95[v195])};for v208=1 + 0 ,v194 do v95[v195 + v208 ]=v196[v208];end local v197=v196[(1659 -(107 + 153)) -(721 + 510 + 167) ];if (((7789 -5381)<=(2701 + 953)) and v197) then local v222=0;while true do if ((((5445 -(806 + 799)) -(87 + 704))<3561) and (v222==(0 -0))) then v95[v195]=v197;v81=v97[9 -6 ];break;end end else v81=v81 + 1 + 0 ;end end elseif ((v98<=30) or ((1863 + 2253)<=(2018 + 1781))) then if ((v98>(2 + 27)) or ((6130 -(738 + 803))<=(2996 -1962))) then local v198=0 -0 ;local v199;local v200;local v201;while true do if ((v198==(0 -0)) or ((973 -(239 + 485))>(2548 + 771))) then v199=0 -0 ;v200=nil;v198=1 -(0 + 0) ;end if (((5515 -3987)<(954 + 1178)) and (v198==1)) then v201=nil;while true do if (((4290 -((978 -333) + 1129))>=((2160 -(158 + 47)) + 350)) and (v199==(0 -0))) then local v252=0 -0 ;while true do if ((v252==(1 -0)) or ((3811 -(263 + 1610))==(14095 -(23603 -12552)))) then v199=709 -(114 + 594) ;break;end if (((8976 -5346)>=(1279 + 842)) and ((0 + 0)==v252)) then v200=v97[2 + 0 ];v201=v95[v97[1281 -(1135 + 143) ]];v252=1;end end end if ((v199==(1 + 0)) or ((15663 -(6389 + 4797))==(962 + 116))) then v95[v200 + (1293 -(1160 + 132)) ]=v201;v95[v200]=v201[v97[7 -3 ]];break;end end break;end end else v95[v97[1 + (1734 -(768 + 965)) ]]=v97[2 + 1 ];end elseif ((v98<=31) or ((12228 -7392)<(4593 -(709 + 700)))) then v95[v97[1 + (2 -1) ]]=v95[v97[(1021 + 905) -(1317 + 606) ]][v97[2 + 2 ]];elseif ((v98==(12 + 20)) or ((10 -6)==((2272 + 1891) -(201 + 479)))) then v95[v97[1 + 0 + 1 ]]=v97[3 + 0 ]~=(1632 -(598 + 1034)) ;else local v224=0;local v225;local v226;local v227;local v228;while true do if ((v224==(1255 -(837 + 416))) or (4237<(4696 -(474 + 124)))) then while true do if ((v225==(523 -(313 + 209))) or ((215 -89)>(5006 -(9 + 85)))) then local v265=0 + 0 ;while true do if (((1242 -(797 + 444))==v265) or ((1774 + 314)==(5913 -(1128 + 537)))) then v225=(6 + 1) -5 ;break;end if ((0==v265) or ((6487 -4116)>=(4596 -1073))) then v228={};v227=v10({},{__index=function(v285,v286)local v287=1964 -(1426 + 538) ;local v288;local v289;while true do if (((2943 -(222 + 432 + 720))>=(540 + 74)) and (v287==(1895 -((1923 -(181 + 31)) + 183)))) then while true do if ((v288==(0 + 0)) or (78>(2190 -(2056 -439)))) then local v311=0;while true do if (((2049 -((25 -(8 + 3)) + 116))<(3375 -(50 + 136))) and (v311==(803 -(45 + 758)))) then v289=v228[v286];return v289[77 -((110 -49) + 15) ][v289[1 + 1 ]];end end end end break;end if ((v287==(0 -0)) or ((3494 -(322 + 1044))>((49239 -32163) -12627))) then v288=308 -(114 + 194) ;v289=nil;v287=1647 -(126 + 1520) ;end end end,__newindex=function(v290,v291,v292)local v293=(1104 -(761 + 343)) + 0 ;local v294;local v295;while true do if ((v293==(0 -(0 + 0))) or ((1211 + 2745)==3475)) then v294=0 -0 ;v295=nil;v293=1;end if (((422 + 737)<(4319 -(28 + (2540 -(132 + 1776))))) and (v293==(1 + 0))) then while true do if (((43 + 436)<=(1914 -(112 + 352))) and (v294==(1118 -(91 + 175 + 852)))) then v295=v228[v291];v295[1][v295[1 + 1 ]]=v292;break;end end break;end end end});v265=2 -(878 -(206 + 671)) ;end end end if ((v225==(862 -(488 + 372))) or ((1977 -(32 + 4))>(13362 -8728))) then for v276=1 + 0 ,v97[3 + 1 ] do local v277=0;local v278;local v279;while true do if (((118 + 550 + 1168)<=2716) and ((1668 -(541 + 1126))==v277)) then while true do if (((3532 -(1176 + 65))<=3415) and (v278==(682 -(219 + 462)))) then if ((v279[678 -(48 + 448 + 181) ]==6) or ((4683 -(1811 + 110))==508)) then v228[v276-(1358 -(653 + 307 + 397)) ]={v95,v279[1 + 2 ]};else v228[v276-(623 -(104 + 518)) ]={v62,v279[4 -1 ]};end v94[ #v94 + (845 -(247 + 597)) ]=v228;break;end if ((v278==(816 -(640 + 176))) or ((1740 -(204 + (215 -166)))==(701 + 1662))) then v81=v81 + 1 + 0 ;v279=v89[v81];v278=1 + 0 ;end end break;end if ((0==v277) or ((312 + 623)>=(15071 -11060))) then v278=0 -(0 + 0) ;v279=nil;v277=1;end end end v95[v97[229 -(214 + 13) ]]=v29(v226,v227,v63);break;end if ((v225==(0 + 0)) or (3844<=(13226 -10577))) then local v267=0 + 0 ;while true do if (((14 + (2814 -(649 + 314)))<=(11539 -8098)) and (v267==((1622 -(1340 + 281)) + (479 -(77 + 402))))) then v225=1;break;end if ((((0 -0) + (0 -0))==v267) or ((11383 -8706)==(1305 -(773 + 127)))) then v226=v90[v97[3]];v227=nil;v267=1 + 0 ;end end end end break;end if ((v224==(0 + 0)) or ((1316 -(232 + 548))>=(571 + 32))) then v225=0;v226=nil;v224=(1178 + 665) -(1067 + (1906 -(21 + 1110))) ;end if ((4926>=4441) and (v224==(1 -(0 -0)))) then v227=nil;v228=nil;v224=(1818 -629) -(920 + 267) ;end end end v81=v81 + (1 -0) ;break;end if ((v104==(0 + 0 + 0)) or ((3026 + 28 + 1063)==(5023 -(682 + 947)))) then local v129=0 -0 ;local v130;while true do if (((395 -(35 + 360))==v129) or ((468 + 348)>=(5918 -(1233 + (895 -(341 + 334)))))) then v130=0 + 0 ;while true do if ((v130==(2 -1)) or ((4211 -993)==(6045 -(834 + 742)))) then v104=1941 -(1493 + 447) ;break;end if ((2643<=4716) and (0==v130)) then v97=v89[v81];v98=v97[1 + 0 ];v130=3 -2 ;end end break;end end end end break;end end break;end end end end v80=3;end if (v80==1) then v83={...};v84=v12("#",...) -1 ;v80=2;end if (v80==3) then A,B=v27(v11(v85));if  not A[1] then local v105=v61[4][v81] or "?" ;error("Script error at ["   .. v105   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end end end return v29(v28(),{},v17)(...);end vv9(),...);end